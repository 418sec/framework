var exec = require('child_process').exec;
var fs = require('fs');
var path = require('path');
var os = require('os');

var EOF = os.platform() === 'win32' ? '\r\n' : '\n';
var $type = 0;

// $type == 0 - full
// $type == 1 - normal
// $type == 2 - minimum

function createDirectory(directory) {
	var arr = [];

	arr.push('controllers');
	arr.push('node_modules');

	if ($type < 2) {

		arr.push('views');
		arr.push('templates');
		arr.push('databases');
		arr.push('definitions');

		if ($type == 0) {
			arr.push('workers');
			arr.push('tests');
			arr.push('contents');
			arr.push('logs');
			arr.push('modules');
		}

		arr.push('resources');
		arr.push('public');

		arr.push('tmp');
	}

	arr.forEach(function(o) {
		var dir = path.join(directory, o);
		if (!fs.existsSync(dir))
			fs.mkdirSync(dir);
	});
}

function createFiles(directory) {
	createFileIndex(directory);
	createFileConfig(directory);

	if ($type < 2) {
		createFileViews(directory);
		createFileResource(directory);
		createFilePublic(directory);
	}

	if ($type === 0) {
		createFileTest(directory);
		createFileModules(directory);
	}

	createFileController(directory);
	createFileDebugging(directory);
}

function createFileIndex(directory) {
	var buffer = [];
	buffer.push("var framework = require('total.js');");
	buffer.push("var http = require('http');");
	buffer.push("");
	buffer.push("var port = parseInt(process.argv[2] || '8000', 10);");
	buffer.push("var debug = true;");
	buffer.push("");
	buffer.push("framework.run(http, debug, port);");
	buffer.push("");
	buffer.push("// framework.test(true);");
	fs.writeFileSync(path.join(directory, 'index.js'), buffer.join(EOF));
}

function createFileConfig(directory) {
	var buffer = [];

	buffer.push("name               : my web site");
	buffer.push("version            : 1.01");
	buffer.push("secret             : your-secret-key");
	buffer.push("author             : Your company name");

	fs.writeFileSync(path.join(directory, 'config-release'), buffer.join(EOF));
	fs.writeFileSync(path.join(directory, 'config-debug'), buffer.join(EOF).replace(/true/g, 'false'));
}

function createFileViews(directory) {
	var buffer = [];
	var dir = path.join(directory, 'views');

	if (!fs.existsSync(dir))
		fs.mkdirSync(dir);

	buffer.push("@{meta('title', 'description', 'keywords')}");
	buffer.push("");
	buffer.push('<div>Hello world!</div>');

	fs.writeFileSync(path.join(dir, 'homepage.html'), buffer.join('\n'));

	buffer = [];

	buffer.push('<!DOCTYPE html>');
	buffer.push('<html>');
	buffer.push('<head>');
	buffer.push('    @{meta}');
	buffer.push('    <meta charset="utf-8" />');
	buffer.push('    <meta http-equiv="X-UA-Compatible" content="IE=10" />');
	buffer.push('    <meta name="format-detection" content="telephone=no" />');
	buffer.push('    <meta name="viewport" content="width=1024, user-scalable=yes" />');
	buffer.push('    <meta name="robots" content="all,follow" />');
	buffer.push('    @{head}');
	buffer.push('    @{css(\'default.css\')}');
	buffer.push('    <script type="text/javascript" src="//code.jquery.com/jquery-2.0.3.min.js"></script>');
	buffer.push('    @{js(\'default.js\')}');
	buffer.push('    @{favicon(\'favicon.ico\')}');
	buffer.push('</head>');
	buffer.push('<body>');
	buffer.push('');
	buffer.push('    @{body}');
	buffer.push('');
	buffer.push('</body>');
	buffer.push('</html>');

	fs.writeFileSync(path.join(dir, '_layout.html'), buffer.join(EOF));
}

function createFileResource(directory) {
	var dir = path.join(directory, 'resources');
	fs.writeFileSync(path.join(dir, 'default.resource'), 'name                : value' + EOF);
}

function createFilePublic(directory) {

	var dir = path.join(directory, 'public');

	var css = path.join(dir, 'css');
	var js = path.join(dir, 'js');
	var img = path.join(dir, 'img');

	if (!fs.existsSync(js))
		fs.mkdirSync(js);

	if (!fs.existsSync(css))
		fs.mkdirSync(css);

	if (!fs.existsSync(img))
		fs.mkdirSync(img);

	var buffer = [];
	buffer.push('User-agent: *');
	buffer.push('Allow: /');
	buffer.push('');

	fs.writeFileSync(path.join(dir, 'robots.txt'), buffer.join(EOF));

	buffer = [];
	buffer.push('@#auto-vendor-prefix#@');
	buffer.push('');
	buffer.push('@constant{ color:#505050 }');
	buffer.push('@function(property){ color:@property }');
	buffer.push('');
	buffer.push('body { padding:20px; margin:0; font:normal 12px Arial; @constant; }');
	buffer.push('div { @function(\'red\'); }');

	fs.writeFileSync(path.join(css, 'default.css'), buffer.join(EOF));

	buffer = [];
	buffer.push('$(document).ready(function() {');
    buffer.push('');
    buffer.push('});');

	fs.writeFileSync(path.join(dir, 'favicon.ico'), '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');
	fs.writeFileSync(path.join(js, 'default.js'), buffer.join(EOF));
}

function createFileModules(directory) {

	var dir = path.join(directory, 'modules');

	var buffer = [];
	buffer.push('exports.yourcode = function () {');
	buffer.push('    return \'Hello World\';');
	buffer.push('};');

	fs.writeFileSync(path.join(dir, 'yourcode.js'), buffer.join(EOF));
}

function createFileController(directory) {

	var dir = path.join(directory, 'controllers');
	var buffer = [];

	buffer.push('exports.install = function(framework) {');
	buffer.push('    framework.route(\'/\', view_homepage);');
	buffer.push('    framework.route(\'#400\', error400);');
	buffer.push('    framework.route(\'#401\', error401);');
	buffer.push('    framework.route(\'#403\', error403);');
	buffer.push('    framework.route(\'#404\', error404);');
	buffer.push('    framework.route(\'#408\', error408);');
	buffer.push('    framework.route(\'#431\', error431);');
	buffer.push('    framework.route(\'#500\', error500);');
	buffer.push('};');
	buffer.push('');
	buffer.push('/*');
	buffer.push('exports.models = function() {');
	buffer.push('');
	buffer.push('};');
	buffer.push('*/');
	buffer.push('');
	buffer.push('/*');
	buffer.push('exports.functions = function() {');
	buffer.push('');
	buffer.push('};');
	buffer.push('*/');
	buffer.push('');
	buffer.push('// Bad Request');
	buffer.push('function error400() {');
	buffer.push('    var self = this;');
	buffer.push('    self.status = 400;');
	buffer.push('    self.plain(utils.httpStatus(self.status));');
	buffer.push('}');
	buffer.push('');
	buffer.push('// Unauthorized');
	buffer.push('function error401() {');
	buffer.push('    var self = this;');
	buffer.push('    self.status = 401;');
	buffer.push('    self.plain(utils.httpStatus(self.status));');
	buffer.push('}');
	buffer.push('');
	buffer.push('// Forbidden');
	buffer.push('function error403() {');
	buffer.push('    var self = this;');
	buffer.push('    self.status = 403;');
	buffer.push('    self.plain(utils.httpStatus(self.status));');
	buffer.push('}');
	buffer.push('');
	buffer.push('// Not Found');
	buffer.push('function error404() {');
	buffer.push('    var self = this;');
	buffer.push('    self.status = 404;');
	buffer.push('    self.plain(utils.httpStatus(self.status));');
	buffer.push('}');
	buffer.push('');
	buffer.push('// Request Timeout');
	buffer.push('function error408() {');
	buffer.push('    var self = this;');
	buffer.push('    self.status = 408;');
	buffer.push('    self.plain(utils.httpStatus(self.status));');
	buffer.push('}');
	buffer.push('');
	buffer.push('// Request Header Fields Too Large');
	buffer.push('function error431() {');
	buffer.push('    var self = this;');
	buffer.push('    self.status = 431;');
	buffer.push('    self.plain(utils.httpStatus(self.status));');
	buffer.push('}');
	buffer.push('');
	buffer.push('// Internal Server Error');
	buffer.push('function error500() {');
	buffer.push('    var self = this;');
	buffer.push('    self.status = 500;');
	buffer.push('    self.plain(utils.httpStatus(self.status));');
	buffer.push('}');
	buffer.push('');
	buffer.push('function view_homepage() {');
	buffer.push('    var self = this;');

	if ($type !== 2)
		buffer.push('    self.view(\'homepage\');');
	else
		buffer.push('    self.plain(\'homepage\');');

	buffer.push('}');

	fs.writeFileSync(path.join(dir, 'default.js'), buffer.join(EOF));
}

function createFileTest(directory) {
	var dir = path.join(directory, 'tests');
	var buffer = [];

	buffer.push("var assert = require('assert');");
	buffer.push("var utils = require('total.js/utils');");
	buffer.push("");
	buffer.push("exports.run = function(framework) {");
	buffer.push("");
	buffer.push("    framework.assert('Homepage', '/1/', function response(error, data, name, code, headers) {");
	buffer.push("        assert.ok(code === 200, name);");
	buffer.push("    });");
	buffer.push("");
	buffer.push("};");

	fs.writeFileSync(path.join(dir, 'global.js'), buffer.join(EOF));
}

function createFileDebugging(directory) {
	fs.writeFileSync(path.join(directory, 'debugging.js'), 'Ly8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLyBJTVBPUlRBTlQ6IG9ubHkgZm9yIGRlYnVnZ2luZyBtb2RlDQovLyB0b3RhbC5qcyAtIHdlYiBhcHBsaWNhdGlvbiBmcmFtZXdvcmsgZm9yIG5vZGUuanMNCi8vIGh0dHA6Ly93d3cudG90YWxqcy5jb20NCi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQp2YXIgZm9yaz1yZXF1aXJlKCJjaGlsZF9wcm9jZXNzIikuZm9yazt2YXIgZnM9cmVxdWlyZSgiZnMiKTt2YXIgcGF0aD1yZXF1aXJlKCJwYXRoIik7dmFyIGRpcmVjdG9yeT1wcm9jZXNzLmN3ZCgpO3ZhciB1dGlscz1yZXF1aXJlKCJ0b3RhbC5qcy91dGlscyIpO3ZhciBkaXJlY3Rvcmllcz1bZGlyZWN0b3J5KyIvY29udHJvbGxlcnMiLGRpcmVjdG9yeSsiL2RlZmluaXRpb25zIixkaXJlY3RvcnkrIi9tb2R1bGVzIixkaXJlY3RvcnkrIi9yZXNvdXJjZXMiXTt2YXIgZmlsZXM9e307dmFyIGZvcmNlPWZhbHNlO3ZhciBjaGFuZ2VzPVtdO3ZhciBhcHA9bnVsbDt2YXIgc3RhdHVzPTA7dmFyIGFzeW5jPW5ldyB1dGlscy5Bc3luYzt2YXIgcGlkPSIiO3ZhciBwaWRJbnRlcnZhbD1udWxsO3ZhciBwcmVmaXg9Ii0tLS0tLS0tLS0tLT4gIjt2YXIgaXNMb2FkZWQ9ZmFsc2U7ZnVuY3Rpb24gb25GaWx0ZXIocGF0aCxpc0RpcmVjdG9yeSl7cmV0dXJuIGlzRGlyZWN0b3J5P3RydWU6cGF0aC5pbmRleE9mKCIuanMiKSE9PS0xfHxwYXRoLmluZGV4T2YoIi5yZXNvdXJjZSIpIT09LTF9ZnVuY3Rpb24gb25Db21wbGV0ZSgpe3ZhciBzZWxmPXRoaXM7ZnMucmVhZGRpcihkaXJlY3RvcnksZnVuY3Rpb24oZXJyLGFycil7dmFyIGxlbmd0aD1hcnIubGVuZ3RoO2Zvcih2YXIgaT0wO2k8bGVuZ3RoO2krKyl7dmFyIG5hbWU9YXJyW2ldO2lmKG5hbWU9PT0iZGVidWdnaW5nLmpzInx8bmFtZT09PSJrZWVwYWxpdmUuanMiKWNvbnRpbnVlO2lmKG5hbWU9PT0iY29uZmlnLWRlYnVnInx8bmFtZT09PSJjb25maWctcmVsZWFzZSJ8fG5hbWU9PT0idmVyc2lvbnMifHxuYW1lLmluZGV4T2YoIi5qcyIpIT09LTF8fG5hbWUuaW5kZXhPZigiLnJlc291cmNlIikhPT0tMSlzZWxmLmZpbGUucHVzaChuYW1lKX1sZW5ndGg9c2VsZi5maWxlLmxlbmd0aDtmb3IodmFyIGk9MDtpPGxlbmd0aDtpKyspe3ZhciBuYW1lPXNlbGYuZmlsZVtpXTtpZighZmlsZXNbbmFtZV0pZmlsZXNbbmFtZV09aXNMb2FkZWQ/MDpudWxsfXJlZnJlc2goKX0pfWZ1bmN0aW9uIHJlZnJlc2goKXt2YXIgZmlsZW5hbWVzPU9iamVjdC5rZXlzKGZpbGVzKTt2YXIgbGVuZ3RoPWZpbGVuYW1lcy5sZW5ndGg7Zm9yKHZhciBpPTA7aTxsZW5ndGg7aSsrKXt2YXIgZmlsZW5hbWU9ZmlsZW5hbWVzW2ldOyhmdW5jdGlvbihmaWxlbmFtZSl7YXN5bmMuYXdhaXQoZnVuY3Rpb24obmV4dCl7ZnMuc3RhdChmaWxlbmFtZSxmdW5jdGlvbihlcnIsc3RhdCl7aWYoIWVycil7dmFyIHRpY2tzPXN0YXQubXRpbWUuZ2V0VGltZSgpO2lmKGZpbGVzW2ZpbGVuYW1lXSE9PW51bGwmJmZpbGVzW2ZpbGVuYW1lXSE9PXRpY2tzKXtjaGFuZ2VzLnB1c2gocHJlZml4K2ZpbGVuYW1lLnJlcGxhY2UoZGlyZWN0b3J5LCIiKSsoZmlsZXNbZmlsZW5hbWVdPT09MD8iIChhZGRlZCkiOiIgKG1vZGlmaWVkKSIpKTtmb3JjZT10cnVlfWZpbGVzW2ZpbGVuYW1lXT10aWNrc31lbHNle2RlbGV0ZSBmaWxlc1tmaWxlbmFtZV07Y2hhbmdlcy5wdXNoKHByZWZpeCtmaWxlbmFtZS5yZXBsYWNlKGRpcmVjdG9yeSwiIikrIiAocmVtb3ZlZCkiKTtmb3JjZT10cnVlfW5leHQoKX0pfSl9KShmaWxlbmFtZSl9YXN5bmMuY29tcGxldGUoZnVuY3Rpb24oKXtpc0xvYWRlZD10cnVlO3NldFRpbWVvdXQocmVmcmVzaF9kaXJlY3RvcnksMmUzKTtpZihzdGF0dXMhPT0xKXJldHVybjtpZighZm9yY2UpcmV0dXJuO3Jlc3RhcnQoKTt2YXIgbGVuZ3RoPWNoYW5nZXMubGVuZ3RoO2Zvcih2YXIgaT0wO2k8bGVuZ3RoO2krKyljb25zb2xlLmxvZyhjaGFuZ2VzW2ldKTtjaGFuZ2VzPVtdO2ZvcmNlPWZhbHNlfSl9ZnVuY3Rpb24gcmVmcmVzaF9kaXJlY3RvcnkoKXt1dGlscy5scyhkaXJlY3RvcmllcyxvbkNvbXBsZXRlLG9uRmlsdGVyKX1mdW5jdGlvbiByZXN0YXJ0KCl7aWYoYXBwIT09bnVsbCl7dHJ5e3Byb2Nlc3Mua2lsbChhcHAucGlkKX1jYXRjaChlcnIpe31hcHA9bnVsbH1hcHA9Zm9yayhwYXRoLmpvaW4oZGlyZWN0b3J5LCJpbmRleC5qcyIpKTthcHAub24oIm1lc3NhZ2UiLGZ1bmN0aW9uKG1zZyl7aWYobXNnLnN1YnN0cmluZygwLDUpPT09Im5hbWU6Iil7cHJvY2Vzcy50aXRsZT0iZGVidWc6ICIrbXNnLnN1YnN0cmluZyg2KTtyZXR1cm59fSk7YXBwLm9uKCJleGl0IixmdW5jdGlvbigpe2lmKHN0YXR1cyE9PTI1NSlyZXR1cm47YXBwPW51bGx9KTtpZihzdGF0dXM9PT0wKWFwcC5zZW5kKCJkZWJ1Z2dpbmciKTtzdGF0dXM9MX1wcm9jZXNzLm9uKCJTSUdURVJNIixmdW5jdGlvbigpe2ZzLnVubGluayhwaWQsbm9vcCk7aWYoYXBwPT09bnVsbCl7cHJvY2Vzcy5leGl0KDApO3JldHVybn1wcm9jZXNzLmtpbGwoYXBwLnBpZCk7YXBwPW51bGw7cHJvY2Vzcy5leGl0KDApfSk7cHJvY2Vzcy5vbigiU0lHSU5UIixmdW5jdGlvbigpe2ZzLnVubGluayhwaWQsbm9vcCk7aWYoYXBwPT09bnVsbCl7cHJvY2Vzcy5leGl0KDApO3JldHVybn1wcm9jZXNzLmtpbGwoYXBwLnBpZCk7YXBwPW51bGw7cHJvY2Vzcy5leGl0KDApfSk7cHJvY2Vzcy5vbigiZXhpdCIsZnVuY3Rpb24oKXtmcy51bmxpbmsocGlkLG5vb3ApO2lmKGFwcD09PW51bGwpcmV0dXJuO3Byb2Nlc3Mua2lsbChhcHAucGlkKTthcHA9bnVsbH0pO2Z1bmN0aW9uIG5vb3AoKXt9aWYocHJvY2Vzcy5waWQ+MCl7Y29uc29sZS5sb2cocHJlZml4KyJQSUQ6ICIrcHJvY2Vzcy5waWQpO3BpZD1wYXRoLmpvaW4oZGlyZWN0b3J5LCJkZWJ1Z2dpbmcucGlkIik7ZnMud3JpdGVGaWxlU3luYyhwaWQscHJvY2Vzcy5waWQpO3BpZEludGVydmFsPXNldEludGVydmFsKGZ1bmN0aW9uKCl7ZnMuZXhpc3RzKHBpZCxmdW5jdGlvbihleGlzdCl7aWYoZXhpc3QpcmV0dXJuO2ZzLnVubGluayhwaWQsbm9vcCk7aWYoYXBwIT09bnVsbClwcm9jZXNzLmtpbGwoYXBwLnBpZCk7cHJvY2Vzcy5leGl0KDApfSl9LDJlMyl9cmVzdGFydCgpO3JlZnJlc2hfZGlyZWN0b3J5KCk7', 'base64');
}

function install(directory) {
	exec('npm install total.js', { cwd: directory }, function (error, stdout, stderr) {

	}).on('exit', function() {
		console.log('total.js: success');
	});
}

function display_help() {
		console.log('');
		console.log('-m or -minimal   = minimal');
		console.log('-n or -normal    = normal');
		console.log('-f or -full      = full (default)');
		console.log('-v or -version   = total.js version');
		console.log('/path/           = target (default current directory)');
		console.log('');
}

function main() {
	var dir = process.cwd();

	for (var i = 2; i < process.argv.length; i++) {
		var arg = process.argv[i];
		var cmd = arg.toLowerCase();

		if (cmd === '-v' || cmd === '-version') {
			console.log(require('total.js').version);
			return;
		}

		if (cmd === '-f' || cmd === '-full')
			continue;

		if (cmd === '-m' || cmd === '-minimal' || cmd === '-minimum') {
			$type = 2;
			continue;
		}

		if (cmd === '-n' || cmd === '-normal') {
			$type = 1;
			continue;
		}

		if (cmd === '-h' || cmd === '-help') {
			display_help();
			return;
		}

		dir = arg;
		break;
	}

	if (!fs.existsSync(dir)) {
		console.log('total.js: error / directory not exists');
		return;
	}

	var files = fs.readdirSync(dir);
	if (files.length > 0) {

		var can = true;
		for (var i = 0; i < files.length; i++) {
			var name = files[i];
			if (name[0] === '.')
				continue;
			can = false;
		}

		if (!can) {
			console.log('total.js: error / directory is not empty');
			return;
		}
	}

	console.log('total.js: creating directories');
	createDirectory(dir);

	console.log('total.js: creating files');
	createFiles(dir);

	console.log('total.js: installing current version total.js');
	install(dir);
}

main();