var exec = require('child_process').exec;
var fs = require('fs');
var path = require('path');
var os = require('os');
var Utils = require('total.js/utils');
var Internal = require('total.js/internal');

var EOF = os.platform() === 'win32' ? '\r\n' : '\n';
var $type = 1;
var isDirectory = false;

// $type == 1 - normal
// $type == 2 - minimal
// $type == 3 - angular

function createDirectory(directory) {
    var arr = [];

    arr.push('controllers');
    arr.push('node_modules');

    if ($type < 2) {
        arr.push('views');
        arr.push('definitions');
        arr.push('public');
    }

    arr.forEach(function(o) {
        var dir = path.join(directory, o);
        if (!fs.existsSync(dir))
            fs.mkdirSync(dir);
    });
}

function createDirectoryAngular(directory) {
    var arr = [];

    arr.push('app');
    arr.push('controllers');
    arr.push('definitions');
    arr.push('node_modules');
    arr.push('views');

    arr.forEach(function(o) {
        var dir = path.join(directory, o);
        if (!fs.existsSync(dir))
            fs.mkdirSync(dir);
    });

    arr = [];
    arr.push('common');
    arr.push('controllers');
    arr.push('css');
    arr.push('directives');
    arr.push('filters');
    arr.push('resources');
    arr.push('services');
    arr.push('templates');
    arr.push('views');

    arr.forEach(function(o) {
        var dir = path.join(directory, 'app', o);
        if (!fs.existsSync(dir))
            fs.mkdirSync(dir);
    });
}

function createFiles(directory) {

    createFileIndex(directory);
    createFileConfig(directory);

    if ($type < 2) {
        createFileDefinitions(directory);
        createFileViews(directory);
        createFilePublic(directory);
    }

    if ($type === 3) {
        // createFileResource(directory);
        createFileViews(directory);
        createFilePublicAngular(directory);
        createFileControllerAngular(directory);
    } else
        createFileController(directory);

    if ($type === 0) {
        createFileTest(directory);
        createFileModules(directory);
    }
}

function createFileIndex(directory) {
    fs.writeFileSync(path.join(directory, 'debug.js'), 'Ly8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLyBJTVBPUlRBTlQ6IG9ubHkgZm9yIGRldmVsb3BtZW50DQovLyB0b3RhbC5qcyAtIHdlYiBhcHBsaWNhdGlvbiBmcmFtZXdvcmsgZm9yIG5vZGUuanMNCi8vIGh0dHA6Ly93d3cudG90YWxqcy5jb20NCi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQp2YXIgZnMgPSByZXF1aXJlKCdmcycpOw0KdmFyIG9wdGlvbnMgPSB7fTsNCg0KLy8gb3B0aW9ucy5pcCA9ICcxMjcuMC4wLjEnOw0KLy8gb3B0aW9ucy5wb3J0ID0gcGFyc2VJbnQocHJvY2Vzcy5hcmd2WzJdKTsNCi8vIG9wdGlvbnMuY29uZmlnID0geyBuYW1lOiAndG90YWwuanMnIH07DQovLyBvcHRpb25zLmh0dHBzID0geyBrZXk6IGZzLnJlYWRGaWxlU3luYygna2V5cy9hZ2VudDIta2V5LnBlbScpLCBjZXJ0OiBmcy5yZWFkRmlsZVN5bmMoJ2tleXMvYWdlbnQyLWNlcnQucGVtJyl9Ow0KLy8gb3B0aW9ucy5zbGVlcCA9IDMwMDA7DQoNCi8qKg0KICogUmVsZWFzZSBub3RlczoNCiAqLw0KDQp2YXIgaXNEZWJ1Z2dpbmc9cHJvY2Vzcy5hcmd2LmluZGV4T2YoImRlYnVnZ2luZyIpIT09LTE7dmFyIGRpcmVjdG9yeT1wcm9jZXNzLmN3ZCgpO3ZhciBwYXRoPXJlcXVpcmUoInBhdGgiKTt2YXIgZmlyc3Q9cHJvY2Vzcy5hcmd2LmluZGV4T2YoInJlc3RhcnQiKT09PS0xO2Z1bmN0aW9uIGRlYnVnKCl7dmFyIGZyYW1ld29yaz1yZXF1aXJlKCJ0b3RhbC5qcyIpO3ZhciBwb3J0PXBhcnNlSW50KHByb2Nlc3MuYXJndlsyXSk7aWYob3B0aW9ucy5odHRwcylyZXR1cm4gZnJhbWV3b3JrLmh0dHBzKCJkZWJ1ZyIsb3B0aW9ucyk7ZnJhbWV3b3JrLmh0dHAoImRlYnVnIixvcHRpb25zKTtpZihmaXJzdClmcmFtZXdvcmsuZW1pdCgiZGVidWctc3RhcnQiKTtlbHNlIGZyYW1ld29yay5lbWl0KCJkZWJ1Zy1yZXN0YXJ0Iil9ZnVuY3Rpb24gYXBwKCl7dmFyIGZvcms9cmVxdWlyZSgiY2hpbGRfcHJvY2VzcyIpLmZvcms7dmFyIHV0aWxzPXJlcXVpcmUoInRvdGFsLmpzL3V0aWxzIik7dmFyIGRpcmVjdG9yaWVzPVtkaXJlY3RvcnkrIi9jb250cm9sbGVycyIsZGlyZWN0b3J5KyIvZGVmaW5pdGlvbnMiLGRpcmVjdG9yeSsiL21vZHVsZXMiLGRpcmVjdG9yeSsiL3Jlc291cmNlcyIsZGlyZWN0b3J5KyIvY29tcG9uZW50cyIsZGlyZWN0b3J5KyIvbW9kZWxzIixkaXJlY3RvcnkrIi9zb3VyY2UiXTt2YXIgZmlsZXM9e307dmFyIGZvcmNlPWZhbHNlO3ZhciBjaGFuZ2VzPVtdO3ZhciBhcHA9bnVsbDt2YXIgc3RhdHVzPTA7dmFyIGFzeW5jPW5ldyB1dGlscy5Bc3luYzt2YXIgcGlkPSIiO3ZhciBwaWRJbnRlcnZhbD1udWxsO3ZhciBwcmVmaXg9Ii0tLS0tLS0tLS0tLT4gIjt2YXIgaXNMb2FkZWQ9ZmFsc2U7ZnVuY3Rpb24gb25GaWx0ZXIocGF0aCxpc0RpcmVjdG9yeSl7cmV0dXJuIGlzRGlyZWN0b3J5P3RydWU6cGF0aC5pbmRleE9mKCIuanMiKSE9PS0xfHxwYXRoLmluZGV4T2YoIi5yZXNvdXJjZSIpIT09LTF9ZnVuY3Rpb24gb25Db21wbGV0ZSgpe3ZhciBzZWxmPXRoaXM7ZnMucmVhZGRpcihkaXJlY3RvcnksZnVuY3Rpb24oZXJyLGFycil7dmFyIGxlbmd0aD1hcnIubGVuZ3RoO2Zvcih2YXIgaT0wO2k8bGVuZ3RoO2krKyl7dmFyIG5hbWU9YXJyW2ldO2lmKG5hbWU9PT0iY29uZmlnInx8bmFtZT09PSJjb25maWctZGVidWcifHxuYW1lPT09ImNvbmZpZy1yZWxlYXNlInx8bmFtZT09PSJ2ZXJzaW9ucyJ8fG5hbWUuaW5kZXhPZigiLmpzIikhPT0tMXx8bmFtZS5pbmRleE9mKCIucmVzb3VyY2UiKSE9PS0xKXNlbGYuZmlsZS5wdXNoKG5hbWUpfWxlbmd0aD1zZWxmLmZpbGUubGVuZ3RoO2Zvcih2YXIgaT0wO2k8bGVuZ3RoO2krKyl7dmFyIG5hbWU9c2VsZi5maWxlW2ldO2lmKCFmaWxlc1tuYW1lXSlmaWxlc1tuYW1lXT1pc0xvYWRlZD8wOm51bGx9cmVmcmVzaCgpfSl9ZnVuY3Rpb24gcmVmcmVzaCgpe3ZhciBmaWxlbmFtZXM9T2JqZWN0LmtleXMoZmlsZXMpO3ZhciBsZW5ndGg9ZmlsZW5hbWVzLmxlbmd0aDtmb3IodmFyIGk9MDtpPGxlbmd0aDtpKyspe3ZhciBmaWxlbmFtZT1maWxlbmFtZXNbaV07KGZ1bmN0aW9uKGZpbGVuYW1lKXthc3luYy5hd2FpdChmdW5jdGlvbihuZXh0KXtmcy5zdGF0KGZpbGVuYW1lLGZ1bmN0aW9uKGVycixzdGF0KXtpZighZXJyKXt2YXIgdGlja3M9c3RhdC5tdGltZS5nZXRUaW1lKCk7aWYoZmlsZXNbZmlsZW5hbWVdIT09bnVsbCYmZmlsZXNbZmlsZW5hbWVdIT09dGlja3Mpe2NoYW5nZXMucHVzaChwcmVmaXgrZmlsZW5hbWUucmVwbGFjZShkaXJlY3RvcnksIiIpKyhmaWxlc1tmaWxlbmFtZV09PT0wPyIgKGFkZGVkKSI6IiAobW9kaWZpZWQpIikpO2ZvcmNlPXRydWV9ZmlsZXNbZmlsZW5hbWVdPXRpY2tzfWVsc2V7ZGVsZXRlIGZpbGVzW2ZpbGVuYW1lXTtjaGFuZ2VzLnB1c2gocHJlZml4K2ZpbGVuYW1lLnJlcGxhY2UoZGlyZWN0b3J5LCIiKSsiIChyZW1vdmVkKSIpO2ZvcmNlPXRydWV9bmV4dCgpfSl9KX0pKGZpbGVuYW1lKX1hc3luYy5jb21wbGV0ZShmdW5jdGlvbigpe2lzTG9hZGVkPXRydWU7c2V0VGltZW91dChyZWZyZXNoX2RpcmVjdG9yeSwyZTMpO2lmKHN0YXR1cyE9PTEpcmV0dXJuO2lmKCFmb3JjZSlyZXR1cm47cmVzdGFydCgpO3ZhciBsZW5ndGg9Y2hhbmdlcy5sZW5ndGg7Zm9yKHZhciBpPTA7aTxsZW5ndGg7aSsrKWNvbnNvbGUubG9nKGNoYW5nZXNbaV0pO2NoYW5nZXM9W107Zm9yY2U9ZmFsc2V9KX1mdW5jdGlvbiByZWZyZXNoX2RpcmVjdG9yeSgpe3V0aWxzLmxzKGRpcmVjdG9yaWVzLG9uQ29tcGxldGUsb25GaWx0ZXIpfWZ1bmN0aW9uIHJlc3RhcnQoKXtpZihhcHAhPT1udWxsKXt0cnl7cHJvY2Vzcy5raWxsKGFwcC5waWQpfWNhdGNoKGVycil7fWFwcD1udWxsfXZhciBhcnI9cHJvY2Vzcy5hcmd2O2Fyci5wb3AoKTtpZihmaXJzdClmaXJzdD1mYWxzZTtlbHNlIGFyci5wdXNoKCJyZXN0YXJ0Iik7YXJyLnB1c2goImRlYnVnZ2luZyIpO2FwcD1mb3JrKHBhdGguam9pbihkaXJlY3RvcnksImRlYnVnLmpzIiksYXJyKTthcHAub24oIm1lc3NhZ2UiLGZ1bmN0aW9uKG1zZyl7aWYobXNnLnN1YnN0cmluZygwLDUpPT09Im5hbWU6Iil7cHJvY2Vzcy50aXRsZT0iZGVidWc6ICIrbXNnLnN1YnN0cmluZyg2KTtyZXR1cm59aWYobXNnPT09ImVhZGRyaW51c2UiKXByb2Nlc3MuZXhpdCgxKX0pO2FwcC5vbigiZXhpdCIsZnVuY3Rpb24oKXtpZihzdGF0dXMhPT0yNTUpcmV0dXJuO2FwcD1udWxsfSk7aWYoc3RhdHVzPT09MClhcHAuc2VuZCgiZGVidWdnaW5nIik7c3RhdHVzPTF9cHJvY2Vzcy5vbigiU0lHVEVSTSIsZW5kKTtwcm9jZXNzLm9uKCJTSUdJTlQiLGVuZCk7cHJvY2Vzcy5vbigiZXhpdCIsZW5kKTtmdW5jdGlvbiBlbmQoKXtpZihhcmd1bWVudHMuY2FsbGVlLmlzRW5kKXJldHVybjthcmd1bWVudHMuY2FsbGVlLmlzRW5kPXRydWU7ZnMudW5saW5rKHBpZCxub29wKTtpZihhcHA9PT1udWxsKXtwcm9jZXNzLmV4aXQoMCk7cmV0dXJufXByb2Nlc3Mua2lsbChhcHAucGlkKTthcHA9bnVsbDtwcm9jZXNzLmV4aXQoMCl9ZnVuY3Rpb24gbm9vcCgpe31pZihwcm9jZXNzLnBpZD4wKXtjb25zb2xlLmxvZyhwcmVmaXgrIlBJRDogIitwcm9jZXNzLnBpZCk7cGlkPXBhdGguam9pbihkaXJlY3RvcnksImRlYnVnLnBpZCIpO2ZzLndyaXRlRmlsZVN5bmMocGlkLHByb2Nlc3MucGlkKTtwaWRJbnRlcnZhbD1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2ZzLmV4aXN0cyhwaWQsZnVuY3Rpb24oZXhpc3Qpe2lmKGV4aXN0KXJldHVybjtmcy51bmxpbmsocGlkLG5vb3ApO2lmKGFwcCE9PW51bGwpcHJvY2Vzcy5raWxsKGFwcC5waWQpO3Byb2Nlc3MuZXhpdCgwKX0pfSwyZTMpfXJlc3RhcnQoKTtyZWZyZXNoX2RpcmVjdG9yeSgpfWZ1bmN0aW9uIHJ1bigpe2lmKGlzRGVidWdnaW5nKXtkZWJ1ZygpO3JldHVybn12YXIgZmlsZW5hbWU9cGF0aC5qb2luKGRpcmVjdG9yeSwiZGVidWcucGlkIik7aWYoIWZzLmV4aXN0c1N5bmMoZmlsZW5hbWUpKXthcHAoKTtyZXR1cm59ZnMudW5saW5rU3luYyhmaWxlbmFtZSk7c2V0VGltZW91dChmdW5jdGlvbigpe2FwcCgpfSwzZTMpfXJ1bigpOw==', 'base64');
    fs.writeFileSync(path.join(directory, 'release.js'), 'Ly8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLyBJTVBPUlRBTlQ6IG9ubHkgZm9yIHByb2R1Y3Rpb24NCi8vIHRvdGFsLmpzIC0gd2ViIGFwcGxpY2F0aW9uIGZyYW1ld29yayBmb3Igbm9kZS5qcw0KLy8gaHR0cDovL3d3dy50b3RhbGpzLmNvbQ0KLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7DQp2YXIgb3B0aW9ucyA9IHt9Ow0KDQovLyBvcHRpb25zLmlwID0gJzEyNy4wLjAuMSc7DQovLyBvcHRpb25zLnBvcnQgPSBwYXJzZUludChwcm9jZXNzLmFyZ3ZbMl0pOw0KLy8gb3B0aW9ucy5jb25maWcgPSB7IG5hbWU6ICd0b3RhbC5qcycgfTsNCi8vIG9wdGlvbnMuaHR0cHMgPSB7IGtleTogZnMucmVhZEZpbGVTeW5jKCdrZXlzL2FnZW50Mi1rZXkucGVtJyksIGNlcnQ6IGZzLnJlYWRGaWxlU3luYygna2V5cy9hZ2VudDItY2VydC5wZW0nKX07DQovLyBvcHRpb25zLnNsZWVwID0gMzAwMDsNCg0KLyoqDQogKiBSZWxlYXNlIG5vdGVzOg0KICovDQoNCnJlcXVpcmUoJ3RvdGFsLmpzJykuaHR0cCgncmVsZWFzZScsIG9wdGlvbnMpOw0KLy8gcmVxdWlyZSgndG90YWwuanMnKS5odHRwcygncmVsZWFzZScsIG9wdGlvbnMpOw==', 'base64');
    fs.writeFileSync(path.join(directory, 'test.js'), 'Ly8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLyBJTVBPUlRBTlQ6IG9ubHkgZm9yIHRlc3RpbmcNCi8vIHRvdGFsLmpzIC0gd2ViIGFwcGxpY2F0aW9uIGZyYW1ld29yayBmb3Igbm9kZS5qcw0KLy8gaHR0cDovL3d3dy50b3RhbGpzLmNvbQ0KLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7DQp2YXIgb3B0aW9ucyA9IHt9Ow0KDQovLyBvcHRpb25zLnRlc3RzID0gWydjb250cm9sbGVycycsICdtb2R1bGVzJ107DQovLyBvcHRpb25zLmlwID0gJzEyNy4wLjAuMSc7DQovLyBvcHRpb25zLnBvcnQgPSBwYXJzZUludChwcm9jZXNzLmFyZ3ZbMl0pOw0KLy8gb3B0aW9ucy5jb25maWcgPSB7IG5hbWU6ICd0b3RhbC5qcycgfTsNCi8vIG9wdGlvbnMuaHR0cHMgPSB7IGtleTogZnMucmVhZEZpbGVTeW5jKCdrZXlzL2FnZW50Mi1rZXkucGVtJyksIGNlcnQ6IGZzLnJlYWRGaWxlU3luYygna2V5cy9hZ2VudDItY2VydC5wZW0nKX07DQovLyBvcHRpb25zLnNsZWVwID0gMzAwMDsNCg0KLyoqDQogKiBSZWxlYXNlIG5vdGVzOg0KICovDQoNCnJlcXVpcmUoJ3RvdGFsLmpzJykuaHR0cCgndGVzdCcsIG9wdGlvbnMpOw0KLy8gcmVxdWlyZSgndG90YWwuanMnKS5odHRwcygndGVzdCcsIG9wdGlvbnMpOw==', 'base64');
}

function createFileDefinitions(directory) {
    fs.writeFileSync(path.join(directory, 'definitions', 'modules.js'), 'LyoqDQogKiBFeHRlcm5hbCBtb2R1bGVzDQogKi8NCg0KLy8gUmVhbC10aW1lIHdlYiB0cmFja2luZw0KSU5TVEFMTCgncGFja2FnZScsICdodHRwczovL21vZHVsZXMudG90YWxqcy5jb20vd2ViY291bnRlci92MS4wMi93ZWJjb3VudGVyLnBhY2thZ2UnLCB7IHVybDogJy93ZWJjb3VudGVyLycgfSk7DQoNCi8vIEEgc2ltcGxlIERET1MgcHJvdGVjdGlvbg0KSU5TVEFMTCgnbW9kdWxlJywgJ2h0dHBzOi8vbW9kdWxlcy50b3RhbGpzLmNvbS9kZG9zL3YxLjAwL2Rkb3MuanMnKTs=', 'base64');
}

function createFileConfig(directory) {
    var buffer = [];

    buffer.push("name                     : My web site");
    buffer.push("version                  : 1.01");
    buffer.push("author                   : Your company name");
    buffer.push("secret                   : your-secret-key");
    buffer.push("");
    buffer.push("// Mail settings");
    buffer.push("mail.smtp                : smtp.yourwebsite.com");
    buffer.push('mail.smtp.options        : "{"secure":false,"port":25,"user":"","password":"","timeout":10000}"');
    buffer.push("mail.address.from        : your@yourwebsite.com");
    buffer.push("mail.address.reply       : your@yourwebsite.com");
    buffer.push("mail.address.bcc         : ");

    fs.writeFileSync(path.join(directory, 'config'), buffer.join(EOF));
    buffer = [];

    buffer.push("default-ip               : 127.0.0.1");
    buffer.push("default-port             : 8000");
    buffer.push("");

    fs.writeFileSync(path.join(directory, 'config-release'), buffer.join(EOF));
    fs.writeFileSync(path.join(directory, 'config-debug'), buffer.join(EOF).replace(/true/g, 'false'));

    if ($type !== 2)
        fs.writeFileSync(path.join(directory, 'config-test'), '');
}

function createFileViews(directory) {
    var buffer = [];
    var dir = path.join(directory, 'views');

    if (!fs.existsSync(dir))
        fs.mkdirSync(dir);


    if ($type !== 3) {
        buffer.push("@{meta('title', 'description', 'keywords')}");
        buffer.push("");
        buffer.push('<div>Hello world!</div>');
        fs.writeFileSync(path.join(dir, 'index.html'), buffer.join('\n'));
    }

    buffer = [];

    if ($type === 3) {
        buffer.push("@{layout('')}");
        buffer.push("@{meta('title', 'description', 'keywords')}");
        buffer.push('');
        buffer.push("@{ng('angular', 'resource', 'route')}");
        buffer.push('');
        buffer.push('<!-- /app/css/ -->')
        buffer.push("@{ngStyle('app')}");
        buffer.push('');
        buffer.push('<!-- cdnjs -->')
        buffer.push("@{ngLocale('en-us')}");
        buffer.push('');
        buffer.push('<!-- /app/controllers/ -->')
        buffer.push("@{ngController('home', 'user')}");
        buffer.push('');
    }

    buffer.push('<!DOCTYPE html>');

    if ($type === 3)
        buffer.push('<html ng-app="app">');
    else
        buffer.push('<html>');

    buffer.push('<head>');
    buffer.push('    @{meta}');
    buffer.push('    <meta charset="utf-8" />');
    buffer.push('    <meta http-equiv="X-UA-Compatible" content="IE=10" />');
    buffer.push('    <meta name="format-detection" content="telephone=no" />');
    buffer.push('    <meta name="viewport" content="width=1024, user-scalable=yes" />');
    buffer.push('    <meta name="robots" content="all,follow" />');
    buffer.push('    @{head}');

    if ($type !== 3) {
        buffer.push('    @{css(\'default.css\')}');
        buffer.push('    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>');
        buffer.push('    @{js(\'default.js\')}');
    }

    buffer.push('    @{favicon(\'favicon.ico\')}');
    buffer.push('</head>');
    buffer.push('<body>');
    buffer.push('');


    if ($type === 3)
        buffer.push('    <div ng-controller="HomeCtrl">{{ name }}</div>');
    else
        buffer.push('    @{body}');

    buffer.push('');
    buffer.push('</body>');
    buffer.push('</html>');


    fs.writeFileSync(path.join(dir, $type === 3 ? 'app.html' : 'layout.html'), buffer.join(EOF));
}

function createFileResource(directory) {
    var dir = path.join(directory, 'resources');
    fs.writeFileSync(path.join(dir, 'default.resource'), 'name                : value' + EOF);
}

function createFilePublicAngular(directory) {

    var dir = path.join(directory, 'app');
    var modules = path.join(directory, 'modules');
    var css = path.join(dir, 'css');
    var controllers = path.join(dir, 'controllers');
    var buffer = [];

    fs.mkdirSync(modules);

    buffer.push('User-agent: *');
    buffer.push('Allow: /');
    buffer.push('');

    fs.writeFileSync(path.join(dir, 'robots.txt'), buffer.join(EOF));
    fs.writeFileSync(path.join(css, 'app.css'), 'LyphdXRvKi8NCg0KLyoNCiAgICB2YXIgY29sb3IgPSAnY29sb3I6cmVkJzsNCiAgICB2YXIgd2lkdGggPSAnOTQwcHgnOw0KKi8NCg0KYm9keSB7IHBhZGRpbmc6MjBweDsgbWFyZ2luOjA7IGZvbnQ6bm9ybWFsIDEycHggQXJpYWw7IGNvbG9yOiM1MDUwNTA7IH0NCg0KLmNvbnRlbnQgeyBtYXJnaW46MCBhdXRvOyB3aWR0aDogJHdpZHRoOyBwYWRkaW5nOiAxMHB4OyBib3JkZXItcmFkaXVzOiA1cHg7ICRjb2xvcjsgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgwLDAsMCwwLjUpOyBhbmltYXRpb246IG15QW5pbWF0aW9uIDVzIGFsdGVybmF0ZTsgfQ0KDQoubGlzdCB7IGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNFMEUwRTA7IHBhZGRpbmctYm90dG9tOjVweDsgbWFyZ2luLWJvdHRvbTo1cHg7IH0NCi5saXN0ID4gZGl2OmZpcnN0LWNoaWxkIHsgZm9udC1zaXplOiAxNXB4OyB9DQoNCkBrZXlmcmFtZXMgbXlBbmltYXRpb24NCnsNCgkwJSAgIHsgYmFja2dyb3VuZDogd2hpdGU7IH0NCgkyNSUgIHsgYmFja2dyb3VuZDogI0YwRjBGMDsgfQ0KCTUwJSAgeyBiYWNrZ3JvdW5kOiAjRDBEMEQwOyB9DQoJMTAwJSB7IGJhY2tncm91bmQ6ICNFMEUwRTA7IH0NCn0=', 'base64');
    fs.writeFileSync(path.join(modules, 'angular.js'), 'Ly8gTUlUIExpY2Vuc2UNCi8vIENvcHlyaWdodCBQZXRlciDFoGlya2EgPHBldGVyc2lya2FAZ21haWwuY29tPg0KLy8gVmVyc2lvbiAxLjAxDQoNCmV4cG9ydHMubmFtZSA9ICdhbmd1bGFyLmpzJzsNCmV4cG9ydHMudmVyc2lvbiA9ICcxLjAxJzsNCmV4cG9ydHMub3B0aW9ucyA9IHsgJ2FuZ3VsYXItdmVyc2lvbic6ICcxLjMuOCcsICdhbmd1bGFyLWkxOG4tdmVyc2lvbic6ICcxLjIuMTUnIH07DQoNCnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7DQp2YXIgRVhURU5TSU9OX0pTID0gJy5qcyc7DQp2YXIgUkVQT1NJVE9SWV9BTkdVTEFSID0gJyRhbmd1bGFyJzsNCnZhciBSRVBPU0lUT1JZX0FOR1VMQVJfTE9DQUxFID0gJyRhbmd1bGFyLWxvY2FsZSc7DQp2YXIgUkVQT1NJVE9SWV9BTkdVTEFSX0NPTU1PTiA9ICckYW5ndWxhci1jb21tb24nOw0KdmFyIFJFUE9TSVRPUllfQU5HVUxBUl9DT05UUk9MTEVSID0gJyRhbmd1bGFyLWNvbnRyb2xsZXInOw0KdmFyIFJFUE9TSVRPUllfQU5HVUxBUl9PVEhFUiA9ICckYW5ndWxhci1vdGhlcic7DQoNCmV4cG9ydHMuaW5zdGFsbCA9IGZ1bmN0aW9uKGZyYW1ld29yaywgb3B0aW9ucykgew0KDQogICAgVXRpbHMuZXh0ZW5kKGV4cG9ydHMub3B0aW9ucywgb3B0aW9ucywgdHJ1ZSk7DQoNCiAgICAvKg0KICAgICAgICBJbmNsdWRlOiBBbmd1bGFyLmpzIENETiBpbnRvIHRoZSBoZWFkDQogICAgICAgIEB2ZXJzaW9uIHtTdHJpbmd9DQogICAgICAgIEBuYW1lIHtTdHJpbmcgb3IgU3RyaW5nIEFycmF5fSA6OiBvcHRpb25hbCwgZXhhbXBsZTogcm91dGUgb3IgcmVzb3VyY2UNCiAgICAgICAgcmV0dXJuIHtTdHJpbmd9DQogICAgKi8NCiAgICBmcmFtZXdvcmsuaGVscGVycy5uZyA9IGZ1bmN0aW9uKG5hbWUpIHsNCiAgICAgICAgdmFyIHNlbGYgPSB0aGlzOw0KDQogICAgICAgIHZhciBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoOw0KICAgICAgICBpZiAobGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBmcmFtZXdvcmsuaGVscGVycy5uZy5jYWxsKHNlbGYsIGFyZ3VtZW50c1tpXSk7DQogICAgICAgICAgICByZXR1cm4gJyc7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAobmFtZSBpbnN0YW5jZW9mIEFycmF5KSB7DQogICAgICAgICAgICBsZW5ndGggPSBuYW1lLmxlbmd0aDsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLmhlbHBlcnMubmcuY2FsbChzZWxmLCBuYW1lW2ldKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfQ0KDQogICAgICAgIHZhciBpc0NvbW1vbiA9IG5hbWVbMF0gPT09ICd', 'base64');

    buffer = [];
    buffer.push("var app = angular.module('app', []);");
    buffer.push('');
    fs.writeFileSync(path.join(dir, 'app.js'), buffer.join(EOF));

    buffer = [];
    buffer.push('function HomeCtrl($scope) {\n    $scope.name = \'total.js + angular.js = awesome\';\n}');
    fs.writeFileSync(path.join(controllers, 'home.js'), buffer.join(EOF));

    buffer = [];
    buffer.push('function UserCtrl($scope) {\n    // example\n}');
    fs.writeFileSync(path.join(controllers, 'user.js'), buffer.join(EOF));
}

function createFilePublic(directory) {

    var dir = path.join(directory, 'public');
    var css = path.join(dir, 'css');
    var js = path.join(dir, 'js');
    var img = path.join(dir, 'img');

    fs.writeFileSync(path.join(dir, 'favicon.ico'), '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');

    if ($type === 3)
        return;

    if (!fs.existsSync(js))
        fs.mkdirSync(js);

    if (!fs.existsSync(css))
        fs.mkdirSync(css);

    if (!fs.existsSync(img))
        fs.mkdirSync(img);

    var buffer = [];
    buffer.push('User-agent: *');
    buffer.push('Allow: /');
    buffer.push('');

    fs.writeFileSync(path.join(dir, 'robots.txt'), buffer.join(EOF));
    fs.writeFileSync(path.join(css, 'default.css'), 'LyphdXRvKi8NCg0KYm9keSB7IHBhZGRpbmc6MjBweDsgbWFyZ2luOjA7IGZvbnQ6bm9ybWFsIDEycHggQXJpYWw7IGNvbG9yOiM1MDUwNTA7IH0NCg0KLmNvbnRlbnQgeyBtYXJnaW46MCBhdXRvOyB3aWR0aDogOTYwcHg7IHBhZGRpbmc6IDEwcHg7IGJvcmRlci1yYWRpdXM6IDVweDsgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgwLDAsMCwwLjUpOyBhbmltYXRpb246IG15QW5pbWF0aW9uIDVzIGFsdGVybmF0ZTsgfQ0KDQoubGlzdCB7IGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNFMEUwRTA7IHBhZGRpbmctYm90dG9tOjVweDsgbWFyZ2luLWJvdHRvbTo1cHg7IH0NCi5saXN0ID4gZGl2OmZpcnN0LWNoaWxkIHsgZm9udC1zaXplOiAxNXB4OyB9DQoNCkBrZXlmcmFtZXMgbXlBbmltYXRpb24NCnsNCgkwJSAgIHsgYmFja2dyb3VuZDogd2hpdGU7IH0NCgkyNSUgIHsgYmFja2dyb3VuZDogI0YwRjBGMDsgfQ0KCTUwJSAgeyBiYWNrZ3JvdW5kOiAjRDBEMEQwOyB9DQoJMTAwJSB7IGJhY2tncm91bmQ6ICNFMEUwRTA7IH0NCn0=', 'base64');

    buffer = [];
    buffer.push('$(document).ready(function() {');
    buffer.push('');
    buffer.push('});');

    fs.writeFileSync(path.join(js, 'default.js'), buffer.join(EOF));
}

function createFileModules(directory) {
    var dir = path.join(directory, 'modules');
    fs.writeFileSync(path.join(dir, 'example.js'), 'Ly8gSW1wb3J0YW50DQpleHBvcnRzLmlkID0gJ2V4YW1wbGUnOw0KDQovLyBPcHRpb25hbA0KZXhwb3J0cy5pbnN0YWxsID0gZnVuY3Rpb24oZnJhbWV3b3JrLCBvcHRpb25zKSB7DQoNCn07DQoNCi8vIE9wdGlvbmFsDQpleHBvcnRzLnVuaW5zdGFsbCA9IGZ1bmN0aW9uKGZyYW1ld29yaywgb3B0aW9ucykgew0KDQp9Ow0KDQovLyBPcHRpb25hbA0KZXhwb3J0cy51c2FnZSA9IGZ1bmN0aW9uKCkgew0KICAgIHJldHVybiB7fTsNCn07DQoNCmV4cG9ydHMueW91cmNvZGUgPSBmdW5jdGlvbigpIHsNCiAgICByZXR1cm4gJ0hlbGxvIFdvcmxkJzsNCn07', 'base64');
}

function createFileControllerAngular(directory) {

    var dir = path.join(directory, 'controllers');
    var buffer = [];

    buffer.push('exports.install = function(framework) {');
    buffer.push('    framework.route(\'/*\', view_app);');
    buffer.push('};');
    buffer.push('');
    buffer.push('function view_app() {');
    buffer.push('    var self = this;');
    buffer.push('    self.view(\'app\');');
    buffer.push('}');

    fs.writeFileSync(path.join(dir, 'default.js'), buffer.join(EOF));
}

function createFileController(directory) {

    var dir = path.join(directory, 'controllers');
    var buffer = [];

    buffer.push('exports.install = function(framework) {');
    buffer.push('    framework.route(\'/\', view_index);');

    if ($type !== 2) {
        buffer.push('    // or');
        buffer.push('    // framework.route(\'/\');');
    }

    buffer.push('};');
    buffer.push('');
    buffer.push('function view_index() {');
    buffer.push('    var self = this;');

    if ($type !== 2)
        buffer.push('    self.view(\'index\');');
    else
        buffer.push('    self.plain(\'index\');');

    buffer.push('}');

    fs.writeFileSync(path.join(dir, 'default.js'), buffer.join(EOF));
}

function createFileTest(directory) {
    var dir = path.join(directory, 'tests');
    var buffer = [];

    buffer.push("var assert = require('assert');");
    buffer.push("");
    buffer.push("exports.priority = 1;");
    buffer.push("exports.disabled = false;");
    buffer.push("");
    buffer.push("exports.run = function(framework) {");
    buffer.push("");
    buffer.push("    framework.assert('Number validation', function(next, name) {");
    buffer.push("        assert.ok('1' === '1', name);");
    buffer.push("        next();");
    buffer.push("    });");
    buffer.push("");
    buffer.push("    framework.assert('Some controller action', '/some-url-action/', ['xhr', 'json'], function(error, data, code, headers, cookies, name) {");
    buffer.push("        assert.ok(code === 200, name);");
    buffer.push("    }, { name: 'total.js (optional)' }, { cookie: 'value (optional)' }, { 'X-My-Header': 'optional' });");
    buffer.push("");
    buffer.push("};");

    fs.writeFileSync(path.join(dir, 'default.js'), buffer.join(EOF));
}

function install(directory) {
    exec('npm install total.js', { cwd: directory }, function (error, stdout, stderr) {

    }).on('exit', function() {
        console.log('total.js: success');
    });
}

function display_help() {
        console.log('');
        console.log('-m or -minimal         = minimal');
        console.log('-n or -normal          = normal (default)');
        console.log('-a or -angular         = for angular.js application');
        console.log('-t or -translate       = creates a resource file with the localized text from views');
        console.log('-t or -translate TEXT  = creates an identificator for the resource');
        console.log('-d or -diff            = creates a differents between two resources "-diff filename1 filename2"');
        console.log('-v or -version         = total.js version');
        console.log('/path/                 = target (default current directory)');
        console.log('');
}

function diff(a, b) {

    if (!fs.existsSync(a)) {
        console.log('The translation file does not exist: ' + a);
        return;
    }

    if (!fs.existsSync(b)) {
        console.log('The translation file does not exist: ' + b);
        return;
    }

    var ba = fs.readFileSync(a).toString('utf8');
    var bb = fs.readFileSync(b).toString('utf8');
    var ca = ba.parseConfig();
    var cb = bb.parseConfig();
    var ka = Object.keys(ca);
    var kb = Object.keys(cb);

    ba = ba.split('\n');
    bb = bb.split('\n');

    var output = '';
    var items = [];
    var add = 0;
    var rem = 0;
    var padding = 0;

    for (var i = 0, length = ba.length; i < length; i++) {
        if (ba[i].indexOf(ka[0]) !== -1) {
            padding = ba[i].indexOf(':');
            break;
        }
    }

    if (padding <= 0)
        padding = 17;

    function find_comment(arr, id) {
        var comment = '';
        for (var i = 0, length = arr.length; i < length; i++) {
            if (arr[i].indexOf(id) !== -1)
                return comment;
            var line = arr[i];
            if (line[0] !== '/' && line[1] !== '/')
                continue;
            comment = line;
        }
        return '';
    }

    for (var i = 0, length = ka.length; i < length; i++) {
        var key = ka[i];

        if (cb[key] !== undefined)
            continue;

        items.push(find_comment(ba, key));
        items.push(key.padRight(padding) + ': ' + ca[key]);
        items.push('');
        add++;
    }

    if (items.length > 0) {
        output += '\n';
        output += 'Add to "' + b + '" these:\n';
        output += '\n';
        output += items.join('\n');
        output += '\n';
    }

    items = [];

    for (var i = 0, length = kb.length; i < length; i++) {
        var key = kb[i];

        if (ca[key] !== undefined)
            continue;

        items.push(find_comment(bb, key));
        items.push(key.padRight(padding) + ': ' + cb[key]);
        items.push('');
        rem++;
    }

    if (items.length > 0) {
        output += '\n';
        output += 'Remove from "' + b + '" these:\n';
        output += '\n';
        output += items.join('\n');
        output += '\n';
    }

    var filename = path.join(path.dirname(a), path.basename(a, '.resource') + '-diff.txt');
    fs.writeFileSync(filename, '// Total.js diff file\n// Created: ' + new Date().format('yyyy-MM-dd HH:mm') + '\n' + output);
    console.log('========================================');
    console.log('Translation files differences:');
    console.log('========================================');
    console.log('');
    console.log('added    : ' + add);
    console.log('removed  : ' + rem);
    console.log('output   : ' + filename);
    console.log('');
}

function main() {

    var dir = process.cwd();
    for (var i = 2; i < process.argv.length; i++) {
        var arg = process.argv[i];
        var cmd = arg.toLowerCase();

        if (cmd.substring(0, 2) === '--')
            cmd = cmd.substring(1);

        if (cmd === '-v' || cmd === '-version') {
            console.log(require('total.js').version);
            return;
        }

        if (cmd === '-t' || cmd === '-translate') {
            $type = 4;
            continue
        }

        if (cmd === '-diff') {
            diff(process.argv[i + 1] || '', process.argv[i + 2] || '');
            return;
        }

        if (cmd === '-a' || cmd === '-angular' || cmd === 'angular') {
            $type = 3;
            continue;
        }

        if (cmd === '-m' || cmd === '-minimal' || cmd === '-minimum' || cmd === 'minimum') {
            $type = 2;
            continue;
        }

        if (cmd === '-n' || cmd === '-normal' || cmd === 'normal') {
            $type = 1;
            continue;
        }

        if (cmd === '-h' || cmd === '-help' || cmd === '--help' || cmd === 'help') {
            display_help();
            return;
        }

        dir = arg;
        isDirectory = true;
        break;
    }

    if (!fs.existsSync(dir)) {
        if ($type !== 4) {
            console.log('total.js: error / directory not exists');
            return;
        }
    }

    if ($type === 4) {

        if (isDirectory) {
            console.log(dir.hash().padRight(17, ' ') + ': ' + dir);
            return;
        }

        console.log('total.js: creating translation');
        Utils.ls(dir, function(files) {

            var resource = {};
            var texts = {};
            var max = 0;
            var root = '';
            var count = 0;

            for (var i = 0, length = files.length; i < length; i++) {
                var filename = files[i];
                if (!filename.endsWith('.html'))
                    continue;

                if (!root)
                    root = filename.substring(0, filename.lastIndexOf('/') + 1);

                var content = fs.readFileSync(filename).toString('utf8');
                var command = Internal.parseLocalization(content, 0);
                while (command !== null) {
                    var key = 'T' + command.command.hash();
                    var file = filename.substring(root.length);
                    texts[key] = command.command;

                    if (resource[key]) {
                        if (resource[key].indexOf(file) === -1)
                            resource[key] += ', ' + file;
                    }
                    else
                        resource[key] = file;
                    count++;
                    max = Math.max(max, key.length);
                    command = Internal.parseLocalization(content, command.end);
                }
            }

            var keys = Object.keys(resource);
            var builder = [];
            var output = {};

            for (var i = 0, length = keys.length; i < length; i++) {
                if (!output[resource[keys[i]]])
                    output[resource[keys[i]]] = [];
                output[resource[keys[i]]].push(keys[i].padRight(max + 5, ' ') + ': ' + texts[keys[i]]);
            }

            keys = Object.keys(output);
            for (var i = 0, length = keys.length; i < length; i++)
                builder.push('\n// ' + keys[i] + '\n' + output[keys[i]].join('\n'));

            fs.writeFileSync('translate.resource', '// Total.js translation file\n// Created: ' + new Date().format('yyyy-MM-dd HH:mm') + '\n' + builder.join('\n'));
            console.log('total.js: translation created (' + count + ' texts)');
        });
        return;
    }

    var files = fs.readdirSync(dir);
    if (files.length > 0) {

        var can = true;
        for (var i = 0; i < files.length; i++) {
            var name = files[i];
            if (name[0] === '.')
                continue;
            can = false;
        }

        if (!can) {
            console.log('total.js: error / directory is not empty');
            return;
        }
    }

    console.log('total.js: creating directories');

    if ($type !== 3)
        createDirectory(dir);
    else
        createDirectoryAngular(dir);

    console.log('total.js: creating files');
    createFiles(dir);

    console.log('total.js: installing the latest version');
    install(dir);
}

main();